# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - schema.graphql

# Where should the generated server code go?
exec:
  filename: graph/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: models/models_gen.go

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graph
  package: graph

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/dickywijayaa/orders-go-graphql/graph/model"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  User:
    model: github.com/dickywijayaa/orders-go-graphql/models.User
    fields:
      orders:
        resolver: true
  Order:
    model: github.com/dickywijayaa/orders-go-graphql/models.Order
    fields:
      buyer:
        resolver: true
      details:
        resolver: true
  OrderDetail:
    model: github.com/dickywijayaa/orders-go-graphql/models.OrderDetail
    fields:
      order:
        resolver: true
  Cart:
    model: github.com/dickywijayaa/orders-go-graphql/models.Cart
    fields:
      cart_detail:
        resolver: true
      buyer:
        resolver: true
  CartDetail:
    model: github.com/dickywijayaa/orders-go-graphql/models.CartDetail
    fields:
      cart:
        resolver: true
  UserAddress:
    model: github.com/dickywijayaa/orders-go-graphql/models.UserAddress
    fields:
      user:
        resolver: true
  Product:
    model: github.com/dickywijayaa/orders-go-graphql/models.Product
    fields:
      user:
        resolver: true